function TuringMachineListener(){return antlr4.tree.ParseTreeListener.call(this),this.queue=[],this.currentStateDef=null,this.states=[],this}function Tuple(e,t,n,i){this.currentSymbol=e,this.nextSymbol=t,this.direction=n,this.nextState=i}function State(e){this.name=e,this.tuples=[]}var antlr4=require("antlr4/index");State.prototype.addTuple=function(e){this.tuples.push(e)},TuringMachineListener.prototype=Object.create(antlr4.tree.ParseTreeListener.prototype),TuringMachineListener.prototype.constructor=TuringMachineListener,TuringMachineListener.prototype.enterR=function(e){},TuringMachineListener.prototype.exitR=function(e){},TuringMachineListener.prototype.enterStatedef=function(e){this.currentStateDef=null},TuringMachineListener.prototype.exitStatedef=function(e){this.states.push(this.currentStateDef)},TuringMachineListener.prototype.enterTuple=function(e){},TuringMachineListener.prototype.exitTuple=function(e){var t=new Tuple(this.queue.shift(),this.queue.shift(),this.queue.shift(),this.queue.shift());this.currentStateDef.addTuple(t)},TuringMachineListener.prototype.enterStatename=function(e){},TuringMachineListener.prototype.exitStatename=function(e){null==this.currentStateDef?this.currentStateDef=new State(e.getText()):this.queue.push(e.getText())},TuringMachineListener.prototype.enterSymbol=function(e){},TuringMachineListener.prototype.exitSymbol=function(e){this.queue.push(e.getText())},TuringMachineListener.prototype.enterDir=function(e){},TuringMachineListener.prototype.exitDir=function(e){this.queue.push(e.getText())},exports.TuringMachineListener=TuringMachineListener;