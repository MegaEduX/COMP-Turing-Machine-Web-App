function Tape(t){t.length||(t=[" "]),this.tape=t,this.currentIndex=0}function Result(t,e){this.tape=t,this.result=e}function TuringMachine(t,e,n){this.inputTape=Tape(t),this.states=e,this.startState=n}Tape.prototype.currentSymbol=function(){return tape[this.currentIndex]},Tape.prototype.moveRight=function(){currentIndex--,-1==currentIndex&&(this.tape.unshift(" "),currentIndex=0)},Tape.prototype.moveLeft=function(){currentIndex++,currentIndex==this.tape.length&&this.tape.push(" ")},Tape.prototype.replaceCurrentSymbol=function(t){"*"!=t&&(this.tape[this.currentIndex]=t)},TuringMachine.prototype.run=function(){var t=this.inputTape;if(!this.validateInputTape())return!1;for(var e=this.getStateNamed(this.startState);;){var n=this.getTupleFromState(e,t.currentSymbol());if(t.replaceCurrentSymbol(n.nextSymbol),"accept"==n.nextState||"reject"==n.nextState)return new Result(t,n.nextState);e=this.getStateNamed(n.nextState),"l"==n.direction?t.moveLeft():"r"==n.direction&&t.moveRight()}},TuringMachine.prototype.validateStates=function(){var t=[];for(var e in this.states)t.push(e.name);for(var e in this.states)if(!t.contains(e.nextState))return!1;return!0},TuringMachine.prototype.getStateNamed=function(t){for(var e in this.states)if(e.name==t||"*"==e.name)return e;return null},TuringMachine.prototype.getTupleFromState=function(t,e){for(var n in t.tuples)if(n.currentSymbol==e||"*"==n.currentSymbol)return n;return n};